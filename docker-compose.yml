version: "3.9"

services:
  backend:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auth_backend
    volumes:
      - ${PWD}:/apps
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - auth_network


  postgres:
    image: postgres
    restart: always
    container_name: auth_postgres
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - auth_network

  nginx:
    image: nginx
    restart: always
    container_name: auth_nginx
    ports:
      - '80:80'
    depends_on:
      - backend
    volumes:
      - ./auth_nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - auth_network


  rabbitmq:
    image: rabbitmq:management
    restart: always
    container_name: auth_rabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    depends_on:
      - postgres
    networks:
      - auth_network

volumes:
  auth_postgres_data:

networks:
  auth_network:
    driver: bridge
